// <auto-generated />
using System;
using DBI.Application;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DBI.Application.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240116211650_Added user")]
    partial class Addeduser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DBI.Domain.Entities.Core.BreedTrainingProps", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DogBreedId")
                        .HasColumnType("integer");

                    b.Property<int>("IdInTrainingDataset")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("BreedTrainingProps");
                });

            modelBuilder.Entity("DBI.Domain.Entities.Core.DogBreed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AvatarLink")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("BreedTrainingPropsId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ShowName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BreedTrainingPropsId")
                        .IsUnique();

                    b.ToTable("DogBreeds");
                });

            modelBuilder.Entity("DBI.Domain.Entities.Core.SearchHistoryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DogBreedId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DogBreedId");

                    b.HasIndex("UserId");

                    b.ToTable("HistoryEntities");
                });

            modelBuilder.Entity("DBI.Domain.Entities.Core.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Role")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("DBI.Domain.Entities.Core.DogBreed", b =>
                {
                    b.HasOne("DBI.Domain.Entities.Core.BreedTrainingProps", "BreedTrainingProps")
                        .WithOne("DogBreed")
                        .HasForeignKey("DBI.Domain.Entities.Core.DogBreed", "BreedTrainingPropsId");

                    b.Navigation("BreedTrainingProps");
                });

            modelBuilder.Entity("DBI.Domain.Entities.Core.SearchHistoryEntity", b =>
                {
                    b.HasOne("DBI.Domain.Entities.Core.DogBreed", "DogBreed")
                        .WithMany("SearchHistories")
                        .HasForeignKey("DogBreedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DBI.Domain.Entities.Core.User", "User")
                        .WithMany("Histories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DogBreed");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DBI.Domain.Entities.Core.BreedTrainingProps", b =>
                {
                    b.Navigation("DogBreed")
                        .IsRequired();
                });

            modelBuilder.Entity("DBI.Domain.Entities.Core.DogBreed", b =>
                {
                    b.Navigation("SearchHistories");
                });

            modelBuilder.Entity("DBI.Domain.Entities.Core.User", b =>
                {
                    b.Navigation("Histories");
                });
#pragma warning restore 612, 618
        }
    }
}
